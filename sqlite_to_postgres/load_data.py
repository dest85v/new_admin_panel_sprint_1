import os
import sqlite3
from contextlib import closing

import psycopg
from psycopg import ClientCursor
from psycopg.rows import dict_row
from psycopg import errors as pg_errors

from data_loader import load_from_sqlite, tables_for_load

import logging

from dotenv import load_dotenv
load_dotenv()

logger = logging.getLogger(__name__)
FORMAT = '%(asctime)s %(levelname)s: %(message)s'
logging.basicConfig(level=logging.INFO, format=FORMAT)


if __name__ == '__main__':
    dsl = {
        'dbname': os.getenv('DB_NAME'),
        'user': os.getenv('DB_USER'),
        'password': os.getenv('DB_PASSWORD'),
        'host': os.getenv('DB_HOST'),
        'port': os.getenv('DB_PORT'),
    }

    try:
        with closing(sqlite3.connect('db.sqlite')) as sqlite_conn, closing(psycopg.connect(
            **dsl, row_factory=dict_row, cursor_factory=ClientCursor
        )) as pg_conn:
            load_from_sqlite(sqlite_conn, pg_conn, tables_for_load)
            pg_conn.commit()
            logger.info('üéâ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã !!!')
    except PermissionError as e:
        logger.error('–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞: %s', e)
    except sqlite3.Error as e:
        logger.error('–û—à–∏–±–∫–∞ SQLite: %s', e)
    except psycopg.OperationalError as e:
        logger.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: %s', e)
        logger.error('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞')
    except psycopg.InterfaceError as e:
        logger.error('–û—à–∏–±–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: %s', e)
        logger.error('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è')
    except pg_errors.Error as e:
        logger.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Postgres: %s', e)
    except Exception as e: # –î–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –≤—Å–µ—Ö –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π
        logger.error('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: %s', e)
